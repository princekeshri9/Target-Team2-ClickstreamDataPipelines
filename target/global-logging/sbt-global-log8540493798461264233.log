[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kkweb\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kkweb\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (OpenLogic Java 11.0.19)
[debug]       Load.loadUnit: plugins took 135.1603ms
[debug]       Load.loadUnit: defsScala took 0.3144ms
[debug] [Loading] Scanning directory C:\Users\kkweb\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kkweb\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.6039 ms
[debug]           Load.resolveProject(global-plugins) took 44.1651ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kkweb\.sbt\1.0\plugins, plugins: List(<none>))) took 83.1645ms
[debug] [Loading] Done in C:\Users\kkweb\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.0794ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1744ms
[debug]     Load.loadUnit(file:/C:/Users/kkweb/.sbt/1.0/plugins/, ...) took 250.9586ms
[debug]   Load.apply: load took 412.8907ms
[debug]   Load.apply: resolveProjects took 5.8452ms
[debug]   Load.apply: finalTransforms took 43.8191ms
[debug]   Load.apply: config.delegates took 5.7374ms
[debug]   Load.apply: Def.make(settings)... took 298.3829ms
[debug]   Load.apply: structureIndex took 65.3866ms
[debug]   Load.apply: mkStreams took 1.326ms
[info] loading global plugins from C:\Users\kkweb\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1852.54ms
[debug]           Load.loadUnit: plugins took 27.4689ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline\project
[debug]             Load.loadUnit: mkEval took 7.2022ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3192 ms
[info] loading settings for project targetready-team2-clickstreamdatatpipeline-build from idea.sbt ...
[debug]               Load.resolveProject(targetready-team2-clickstreamdatatpipeline-build) took 3.0427ms
[debug]             Load.loadTransitive: finalizeProject(Project(id targetready-team2-clickstreamdatatpipeline-build, base: C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline\project, plugins: List(<none>))) took 4.8843ms
[debug] [Loading] Done in C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline\project, returning: (targetready-team2-clickstreamdatatpipeline-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1694.9967ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3087ms
[debug]         Load.loadUnit(file:/C:/target_ready/Phase%202/TargetReady-Team2-ClickStreamDatatPipeline/project/, ...) took 1727.7796ms
[debug]       Load.apply: load took 1729.4467ms
[debug]       Load.apply: resolveProjects took 0.1537ms
[debug]       Load.apply: finalTransforms took 7.4939ms
[debug]       Load.apply: config.delegates took 0.4317ms
[debug]       Load.apply: Def.make(settings)... took 53.6167ms
[debug]       Load.apply: structureIndex took 22.981ms
[debug]       Load.apply: mkStreams took 0.0193ms
[info] loading project definition from C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2845.7188ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline
[debug]       Load.loadUnit: mkEval took 0.4666ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2844 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.8976ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline, plugins: List(<none>))) took 32.59ms
[debug] [Loading] Done in C:\target_ready\Phase 2\TargetReady-Team2-ClickStreamDatatPipeline, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1853.4249ms
[debug]     Load.loadUnit: cleanEvalClasses took 30.8874ms
[debug]   Load.loadUnit(file:/C:/target_ready/Phase%202/TargetReady-Team2-ClickStreamDatatPipeline/, ...) took 4730.7018ms
[debug] Load.apply: load took 4732.9584ms
[debug] Load.apply: resolveProjects took 0.1726ms
[debug] Load.apply: finalTransforms took 23.7655ms
[debug] Load.apply: config.delegates took 0.3132ms
[debug] Load.apply: Def.make(settings)... took 38.2382ms
[debug] Load.apply: structureIndex took 17.4585ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to TargetReady-Team2-ClickStreamDatatPipeline (in build file:/C:/target_ready/Phase%202/TargetReady-Team2-ClickStreamDatatPipeline/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50632 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50632, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to TargetReady-Team2-ClickStreamDatatPipeline (in build file:/C:/target_ready/Phase%202/TargetReady-Team2-ClickStreamDatatPipeline/)
[debug] > Exec(idea-shell, None, None)
